<%- include('../../components/header', { title: 'API Management' }) %>

<main class="h-screen m-auto">
	<div class="flex h-screen">
		<!-- Sidebar -->
		<div class="w-60 h-full">
			<%- include('../../components/template') %>
		</div>
		<!-- Content -->
		<div class="flex-1 p-6 overflow-y-auto pt-16">
			<div class="sm:flex sm:items-center px-8 pt-4">
				<div class="sm:flex-auto">
					<h1 class="text-base font-medium leading-6 text-neutral-800 dark:text-white">API Management</h1>
					<p class="mt-1 tracking-tight text-sm text-neutral-500">Manage API keys and monitor API usage</p>
				</div>
				<div class="mt-4 sm:ml-16 sm:mt-0 sm:flex-none">
					<button id="createApiKeyBtn" type="button" class="border border-neutral-800/20 block rounded-xl bg-white hover:bg-neutral-200 dark:hover:bg-neutral-300 text-neutral-800 px-3 py-2 text-center text-sm font-medium shadow-lg transition duration-300">
						Create API Key
					</button>
				</div>
			</div>

			<!-- Stats Grid -->
			<div class="grid grid-cols-1 md:grid-cols-3 gap-6 m-8">
				<div class="bg-white/5 rounded-xl p-6 shadow-lg border border-neutral-800/20">
					<h2 class="text-lg font-medium text-neutral-800 dark:text-white mb-2">Active API Keys</h2>
					<p class="text-4xl font-normal text-neutral-800 dark:text-white" id="activeKeysCount">-</p>
					<p class="text-sm text-neutral-400 mt-2">Total API keys in use</p>
				</div>
				
				<div class="bg-white/5 rounded-xl p-6 shadow-lg border border-neutral-800/20">
					<h2 class="text-lg font-medium text-neutral-800 dark:text-white mb-2">Total Requests</h2>
					<p class="text-4xl font-normal text-neutral-800 dark:text-white" id="totalRequests">-</p>
					<p class="text-sm text-neutral-400 mt-2">API requests in last 24h</p>
				</div>

				<div class="bg-white/5 rounded-xl p-6 shadow-lg border border-neutral-800/20">
					<h2 class="text-lg font-medium text-neutral-800 dark:text-white mb-2">Security Events</h2>
					<p class="text-4xl font-normal text-neutral-800 dark:text-white" id="securityEvents">-</p>
					<p class="text-sm text-neutral-400 mt-2">Security alerts in last 24h</p>
				</div>
			</div>

			<!-- API Keys Table -->
			<div class="overflow-hidden shadow rounded-lg m-8 border border-neutral-800/20">
				<table class="min-w-full divide-y divide-white/10">
					<thead class="bg-white/5">
						<tr>
							<th scope="col" class="py-3.5 pl-4 pr-3 text-left text-sm font-medium text-neutral-800 dark:text-white sm:pl-6">Name</th>
							<th scope="col" class="px-3 py-3.5 text-left text-sm font-medium text-neutral-800 dark:text-white">Last Used</th>
							<th scope="col" class="px-3 py-3.5 text-left text-sm font-medium text-neutral-800 dark:text-white">Usage Count</th>
							<th scope="col" class="px-3 py-3.5 text-left text-sm font-medium text-neutral-800 dark:text-white">Status</th>
							<th scope="col" class="px-3 py-3.5 text-left text-sm font-medium text-neutral-800 dark:text-white">Actions</th>
						</tr>
					</thead>
					<tbody class="divide-y divide-white/5 bg-white/5" id="apiKeysTable">
						<!-- API keys will be populated here -->
					</tbody>
				</table>
			</div>

			<!-- Create API Key Modal -->
			<div id="createKeyModal" class="hidden fixed inset-0 bg-black bg-opacity-50 z-40">
				<div class="flex items-center justify-center min-h-screen p-4">
					<div class="bg-neutral-800 rounded-xl shadow-xl p-6 w-full max-w-md">
						<h2 class="text-xl font-bold mb-4 text-white">Create API Key</h2>
						<form id="createKeyForm" class="space-y-4">
							<div>
								<label class="block text-sm font-medium text-white mb-2">Name</label>
								<input type="text" name="name" required class="w-full rounded-xl bg-neutral-700 border-neutral-600 text-white px-3 py-2">
							</div>
							<div>
								<label class="block text-sm font-medium text-white mb-2">Permissions</label>
								<div class="space-y-2">
									<label class="flex items-center space-x-2">
										<input type="checkbox" name="permissions" value="read" class="rounded text-emerald-500">
										<span class="text-white">Read</span>
									</label>
									<label class="flex items-center space-x-2">
										<input type="checkbox" name="permissions" value="write" class="rounded text-emerald-500">
										<span class="text-white">Write</span>
									</label>
									<label class="flex items-center space-x-2">
										<input type="checkbox" name="permissions" value="admin" class="rounded text-emerald-500">
										<span class="text-white">Admin</span>
									</label>
								</div>
							</div>
							<div>
								<label class="block text-sm font-medium text-white mb-2">Expires In</label>
								<select name="expiresIn" class="w-full rounded-xl bg-neutral-700 border-neutral-600 text-white px-3 py-2">
									<option value="86400">24 Hours</option>
									<option value="604800">7 Days</option>
									<option value="2592000">30 Days</option>
									<option value="31536000">1 Year</option>
									<option value="">Never</option>
								</select>
							</div>
							<div class="flex justify-end space-x-3 mt-6">
								<button type="button" onclick="closeModal()" class="px-4 py-2 rounded-xl bg-neutral-700 text-white hover:bg-neutral-600">Cancel</button>
								<button type="submit" class="px-4 py-2 rounded-xl bg-emerald-600 text-white hover:bg-emerald-500">Create</button>
							</div>
						</form>
					</div>
				</div>
			</div>
		</div>
	</div>
</main>

<%- include('../../components/toast') %>

<script>
async function loadApiKeys() {
	try {
		const response = await fetch('/api/v1/api-keys');
		const keys = await response.json();
		const tableBody = document.getElementById('apiKeysTable');
		tableBody.innerHTML = keys.map(key => `
			<tr class="hover:bg-white/[0.05] transition-colors">
				<td class="whitespace-nowrap py-4 pl-4 pr-3 text-sm text-neutral-800 dark:text-white sm:pl-6">${key.name}</td>
				<td class="whitespace-nowrap px-3 py-4 text-sm text-neutral-400">${key.lastUsed ? new Date(key.lastUsed).toLocaleString() : 'Never'}</td>
				<td class="whitespace-nowrap px-3 py-4 text-sm text-neutral-400">${key.usageCount}</td>
				<td class="whitespace-nowrap px-3 py-4 text-sm">
					<span class="inline-flex items-center rounded-md ${key.active ? 'bg-emerald-600/10 text-emerald-400 ring-emerald-600/20' : 'bg-red-600/10 text-red-400 ring-red-600/20'} px-2 py-1 text-xs font-medium ring-1 ring-inset">
						${key.active ? 'Active' : 'Inactive'}
					</span>
				</td>
				<td class="whitespace-nowrap px-3 py-4 text-sm">
					<div class="flex gap-3">
						<button onclick="showPermissions('${key.id}')" class="rounded-xl border border-neutral-800/20 bg-white hover:bg-neutral-300 text-neutral-800 px-3 py-2 text-center text-sm font-medium shadow-lg transition">Permissions</button>
						<button onclick="revokeKey('${key.id}')" class="rounded-xl bg-red-600 px-3 py-2 text-center text-sm font-medium text-white shadow-lg hover:bg-red-500 transition">Revoke</button>
					</div>
				</td>
			</tr>
		`).join('');
	} catch (error) {
		console.error('Error loading API keys:', error);
		showToast('Failed to load API keys', 'error');
	}
}

document.getElementById('createApiKeyBtn').addEventListener('click', () => {
	document.getElementById('createKeyModal').classList.remove('hidden');
});

function closeModal() {
	document.getElementById('createKeyModal').classList.add('hidden');
}

document.getElementById('createKeyForm').addEventListener('submit', async (e) => {
	e.preventDefault();
	const formData = new FormData(e.target);
	const permissions = Array.from(formData.getAll('permissions'));
	
	try {
		const response = await fetch('/api/v1/api-keys', {
			method: 'POST',
			headers: { 'Content-Type': 'application/json' },
			body: JSON.stringify({
				name: formData.get('name'),
				permissions,
				expiresIn: formData.get('expiresIn')
			})
		});

		if (response.ok) {
			const result = await response.json();
			showApiKeyPopup(result.key);
			closeModal();
			loadApiKeys();
		} else {
			throw new Error('Failed to create API key');
		}
	} catch (error) {
		console.error('Error:', error);
		showToast('Failed to create API key', 'error');
	}
});

function showApiKeyPopup(apiKey) {
	const overlay = document.createElement('div');
	overlay.className = 'fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center';
	overlay.innerHTML = `
		<div class="bg-neutral-800 rounded-xl p-6 max-w-lg w-full mx-4">
			<h3 class="text-lg font-bold text-white mb-4">API Key Created</h3>
			<p class="text-neutral-300 mb-2">Copy your API key now. You won't be able to see it again!</p>
			<div class="bg-neutral-900 p-3 rounded-xl mb-4 break-all">
				<code class="text-emerald-500">${apiKey}</code>
			</div>
			<div class="flex justify-end space-x-3">
				<button onclick="copyToClipboard('${apiKey}')" class="px-4 py-2 rounded-xl bg-emerald-600 text-white hover:bg-emerald-500">Copy</button>
				<button onclick="this.parentElement.parentElement.parentElement.remove()" class="px-4 py-2 rounded-xl bg-neutral-700 text-white hover:bg-neutral-600">Close</button>
			</div>
		</div>
	`;
	document.body.appendChild(overlay);
}

async function copyToClipboard(text) {
	try {
		await navigator.clipboard.writeText(text);
		showToast('API key copied to clipboard', 'success');
	} catch (err) {
		console.error('Failed to copy:', err);
		showToast('Failed to copy API key', 'error');
	}
}

async function revokeKey(keyId) {
	if (!confirm('Are you sure you want to revoke this API key?')) return;
	
	try {
		const response = await fetch(`/api/v1/api-keys/${keyId}`, {
			method: 'DELETE'
		});
		
		if (response.ok) {
			showToast('API key revoked successfully', 'success');
			loadApiKeys();
		} else {
			throw new Error('Failed to revoke API key');
		}
	} catch (error) {
		console.error('Error:', error);
		showToast('Failed to revoke API key', 'error');
	}
}

// Load initial data
loadApiKeys();
</script>

<%- include('../../components/footer') %>